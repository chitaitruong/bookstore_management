/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ban_vpp_nha_sach_pn;

import java.awt.CardLayout;
import java.util.HashMap;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class LapPhieuDatHang extends javax.swing.JFrame {

    /**
     * Creates new form LapPhieuDatHang
     */
    HashMap<String,String> dsNcc=new HashMap<>();
    HashSet<String> dsVP=new HashSet<>();
    public LapPhieuDatHang(){
        initComponents();
        this.setLocationRelativeTo(null);
        this.idText.setText(String.valueOf(ManHinhChinh.ID));
        this.hoTenText.setText(ManHinhChinh.hoTen);
        this.generateSoPD();
        loadDataAll();
        loadDataPNAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        xemPD = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField10 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        lapPD = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        soPDLabel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        refreshButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        hoTenText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        matHangTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        donGiaText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        them2Button = new javax.swing.JButton();
        themMHButton = new javax.swing.JButton();
        loadButton1 = new javax.swing.JButton();
        soLuongSpinner = new javax.swing.JSpinner();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        phieuDHTable = new javax.swing.JTable();
        xoaButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        thanhTienText = new javax.swing.JTextField();
        lapPhieuButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        thoiGianGiaoText = new javax.swing.JTextField();
        diaDiemGiaoText = new javax.swing.JTextField();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("LẬP PHẾU NHẬN HÀNG");
        jDialog1.setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        jDialog1.setModal(true);

        jLabel14.setText("Số PD:");

        jTextField1.setEditable(false);

        jLabel21.setText("Số PN:");

        jTextField8.setEditable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jLabel23.setText("Ghi chú:");

        jButton1.setText("Lập phiếu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Hủy");

        jLabel24.setText("Tổng cộng:");

        jTextField9.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel21))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jDialog1.getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        jLabel12.setBackground(java.awt.Color.blue);
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("LẬP PHIẾU NHẬN HÀNG");
        jLabel12.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 755, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        jDialog1.getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_START);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LẬP PHIẾU ĐẶT HÀNG");
        setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        setPreferredSize(new java.awt.Dimension(1200, 700));
        setResizable(false);

        jPanel9.setPreferredSize(new java.awt.Dimension(1200, 750));
        jPanel9.setLayout(new java.awt.CardLayout());

        xemPD.setPreferredSize(new java.awt.Dimension(1200, 750));
        xemPD.setLayout(new java.awt.GridLayout(1, 2));

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jLabel10.setBackground(java.awt.Color.blue);
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("PHIẾU ĐẶT HÀNG");
        jLabel10.setOpaque(true);

        jButton3.setText("Xem chi tiết");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số PD", "Ngày lập", "Thời gian giao", "Địa điểm giao", "ID nhân viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable3);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH PHIẾU ĐẶT HÀNG");

        jButton4.setText("Lập phiếu nhận");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Chưa nhập hàng", "Đã nhập hàng" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton7.setText("Tìm");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setText("Lập phiếu đặt hàng");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel1.add(jPanel7);

        jLabel25.setBackground(java.awt.Color.blue);
        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("PHIẾU NHẬN HÀNG");
        jLabel25.setOpaque(true);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số PN", "Ngày lập", "ID nhân viên", "Số PD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable4);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("DANH SÁCH PHIẾU NHẬN HÀNG");

        jButton8.setText("Tìm");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Xem chi tiết");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Xem tất cả");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel8);

        xemPD.add(jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable2);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(java.awt.Color.blue);
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("CHI TIẾT PHIẾU ĐẶT");
        jLabel13.setToolTipText("");
        jLabel13.setOpaque(true);

        jLabel15.setText("Số PD:");

        jTextField2.setEditable(false);

        jLabel17.setText("Nhân viên:");

        jTextField3.setEditable(false);

        jTextField4.setEditable(false);
        jTextField4.setToolTipText("");

        jLabel18.setText("Tổng cộng:");

        jTextField5.setEditable(false);
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel19.setText("Thời gian giao:");

        jTextField6.setEditable(false);
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel20.setText("Địa điểm giao:");

        jTextField7.setEditable(false);
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel22.setText("Ngày lập:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))))
                        .addGap(0, 343, Short.MAX_VALUE))
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        xemPD.add(jPanel6);

        jPanel9.add(xemPD, "xemPD");

        lapPD.setPreferredSize(new java.awt.Dimension(1200, 750));
        lapPD.setLayout(new java.awt.GridLayout(2, 2));

        jLabel16.setBackground(java.awt.Color.blue);
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("LẬP PHIẾU ĐẶT HÀNG");
        jLabel16.setOpaque(true);

        jLabel1.setText("Số PD:");

        soPDLabel.setEditable(false);

        jLabel3.setText("Nhà cung cấp:");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("ID:");

        idText.setEditable(false);

        hoTenText.setEditable(false);

        matHangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Thương hiệu", "Số lượng tồn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(matHangTable);

        jLabel7.setText("Số lượng:");

        donGiaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donGiaTextActionPerformed(evt);
            }
        });

        jLabel8.setText("Đơn giá:");

        them2Button.setText("Thêm");
        them2Button.setEnabled(false);
        them2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                them2ButtonActionPerformed(evt);
            }
        });

        themMHButton.setText("Thêm mặt hàng mới");
        themMHButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themMHButtonActionPerformed(evt);
            }
        });

        loadButton1.setText("Chọn NCC");
        loadButton1.setEnabled(false);
        loadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButton1ActionPerformed(evt);
            }
        });

        soLuongSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jButton6.setText("Danh sách phiếu đặt và nhận hàng");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(soLuongSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(donGiaText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(them2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(refreshButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hoTenText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(soPDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel3))
                                            .addComponent(themMHButton))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(loadButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)))
                        .addGap(0, 492, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(jLabel9)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoTenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(soPDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(themMHButton)
                    .addComponent(loadButton1))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(donGiaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(them2Button)
                        .addComponent(soLuongSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addGap(0, 75, Short.MAX_VALUE))
        );

        lapPD.add(jPanel2);

        phieuDHTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Số lượng", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(phieuDHTable);

        xoaButton.setText("Xóa");
        xoaButton.setEnabled(false);
        xoaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setEnabled(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Thành tiền:");

        thanhTienText.setEditable(false);

        lapPhieuButton.setText("Lập phiếu và in");
        lapPhieuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lapPhieuButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Thời gian giao:");

        jLabel11.setText("Địa điểm giao:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thanhTienText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(thoiGianGiaoText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(diaDiemGiaoText, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(159, 159, 159)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lapPhieuButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xoaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 311, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xoaButton)
                    .addComponent(clearButton)
                    .addComponent(jLabel6)
                    .addComponent(thanhTienText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(thoiGianGiaoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lapPhieuButton)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(diaDiemGiaoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 111, Short.MAX_VALUE))
        );

        lapPD.add(jPanel4);

        jPanel9.add(lapPD, "lapPD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new LapPhieuDatHang().setVisible(true);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        this.loadButton.setEnabled(false);
        this.jComboBox1.setEnabled(false);
        this.clearButton.setEnabled(true);
        this.xoaButton.setEnabled(true);
        this.them2Button.setEnabled(true);
        DefaultTableModel tbModel=(DefaultTableModel)matHangTable.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM VATPHAM VP JOIN THUONGHIEU TH ON VP.MANCC=? AND VP.MATH=TH.MATH";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setString(1, dsNcc.get((String)jComboBox1.getSelectedItem()));
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();
            Vector data=new Vector();
            column.add("Mã");column.add("Tên");
            column.add("Thương hiệu");column.add("Số lượng tồn");
            while (rs.next())
            {
                Vector vp=new Vector();
                vp.add(rs.getString("MAVPP"));
                vp.add(rs.getNString("TENVP"));
                vp.add(rs.getString("TEN"));
                vp.add(rs.getInt("SLT"));
                data.add(vp);
            }
            tbModel.setDataVector(data, column);
            loadButton1.setEnabled(true);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void themMHButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themMHButtonActionPerformed
        // TODO add your handling code here:
        new ThemMatHang().setVisible(true);
    }//GEN-LAST:event_themMHButtonActionPerformed

    private void xoaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaButtonActionPerformed
        // TODO add your handling code here:
        if (phieuDHTable.getSelectedRowCount()==1)
        {
            DefaultTableModel tbModel=(DefaultTableModel)phieuDHTable.getModel();
            dsVP.remove((String)tbModel.getValueAt(phieuDHTable.getSelectedRow(), 0));
            tbModel.removeRow(phieuDHTable.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Xóa thành công.");
            tinhTien();
        } else 
        {
            if (phieuDHTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Phiếu đặt hàng trống!");
            } else
            {
                 JOptionPane.showMessageDialog(null, "Xin hãy chọn một mặt hàng trong phiếu để xóa!");
            }
        }
    }//GEN-LAST:event_xoaButtonActionPerformed

    private void them2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_them2ButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)matHangTable.getModel();
        DefaultTableModel tbModel2=(DefaultTableModel)phieuDHTable.getModel();
        if (matHangTable.getSelectedRowCount()==1)// test
        {
            if (!dsVP.contains((String)tbModel.getValueAt(matHangTable.getSelectedRow(), 0)))
            { 
                if (Account.isNumeric(donGiaText.getText().strip()))
                {
                    Vector data=new Vector();
                    data.add(tbModel.getValueAt(matHangTable.getSelectedRow(), 0));
                    data.add(tbModel.getValueAt(matHangTable.getSelectedRow(), 1));
                    data.add((int)soLuongSpinner.getValue());
                    data.add(Long.valueOf(donGiaText.getText().strip()));
                    tbModel2.addRow(data);
                    dsVP.add((String)tbModel.getValueAt(matHangTable.getSelectedRow(), 0));
                    soLuongSpinner.setValue(1);
                    donGiaText.setText("");
                    tinhTien();
                } else
                {
                    JOptionPane.showMessageDialog(null, "Số lượng hoặc đơn giá không hợp lệ!");
                }
            } else
            {
                JOptionPane.showMessageDialog(null, "Vật phẩm này đã có trong phiếu!");
            }
        } else 
        {
            if (matHangTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng mặt hàng trống!");
            } else
            {
                 JOptionPane.showMessageDialog(null, "Xin hãy chọn một mặt hàng để thêm!");
            }
        }
    }//GEN-LAST:event_them2ButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)phieuDHTable.getModel();
        var data=tbModel.getDataVector();
        if (!data.isEmpty())
        {
            int i=JOptionPane.showConfirmDialog(null,"Bạn chắc chắn muốn xóa hết?","Message",JOptionPane.YES_NO_OPTION);
            if (i==0)
            {
                clearPhieuDatTable();
                dsVP=new HashSet<>();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Phiếu trống!");
        }
        
    }//GEN-LAST:event_clearButtonActionPerformed

    private void donGiaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donGiaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donGiaTextActionPerformed

    private void lapPhieuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lapPhieuButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)phieuDHTable.getModel();
        var data=tbModel.getDataVector();
        if (data.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Phiếu đặt hàng trống!");
        } else
        {
            try {
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="";
                PreparedStatement ps=null;
                String soPD=soPDLabel.getText();
                String ghiChu="";
                try
                {
                    conn.setAutoCommit(false);
                    sql="INSERT INTO PHIEUDATHANG(SOPD,GHICHU,THOIGIANGIAO,DIADIEMGIAO,IDNHANVIEN) VALUES(?,?,?,?,?)";
                    ps=conn.prepareStatement(sql);
                    ps.setString(1, soPD);
                    ps.setNString(2, ghiChu);
                    ps.setString(3, thoiGianGiaoText.getText().strip());
                    ps.setString(4,diaDiemGiaoText.getText().strip());
                    ps.setInt(5, ManHinhChinh.ID);
                    ps.executeUpdate();
                    sql="INSERT INTO CT_DH_VP VALUES(?,?,?,?)";
                    ps=conn.prepareStatement(sql);
                    for (var x: data)
                    {
                        ps.setString(1, soPD);
                        ps.setString(2,(String)x.get(0));
                        ps.setInt(3, (int)x.get(2));
                        ps.setLong(4, (long)x.get(3));
                        ps.addBatch();
                    }
                    ps.executeBatch();
                    conn.commit();
                    clearPhieuDatTable();
                    JOptionPane.showMessageDialog(null, "Lập phiếu đặt hàng thành công!");
                    generateSoPD();
                } catch(Exception ex) {
                    
                    conn.rollback();
                    generateSoPD();
                    JOptionPane.showMessageDialog(null, "Lập phiếu đặt hàng thất bại! Thử lại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                    ex.printStackTrace();
                }
            } catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null,"Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_lapPhieuButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tbModel1=(DefaultTableModel)jTable3.getModel();
        if (jTable3.getSelectedRowCount()==1)
        {
            Vector column=new Vector();column.add("Mã");column.add("Tên");column.add("Số lượng");column.add("Đơn giá");column.add("Thành tiền");
            Vector data=new Vector();
            Vector dsData=new Vector();
            jTextField2.setText((String)tbModel1.getValueAt(jTable3.getSelectedRow(), 0));
            jTextField3.setText(String.valueOf(tbModel1.getValueAt(jTable3.getSelectedRow(), 4)));
            jTextField4.setText((String)tbModel1.getValueAt(jTable3.getSelectedRow(), 1));
            jTextField6.setText((String)tbModel1.getValueAt(jTable3.getSelectedRow(), 2));
            jTextField7.setText((String)tbModel1.getValueAt(jTable3.getSelectedRow(), 3));
            jLabel13.setText("CHI TIẾT PHIẾU ĐẶT");
            jLabel14.setText("Số PD:");
            jLabel19.setVisible(true);
            jLabel20.setVisible(true);
            jTextField6.setVisible(true);
            jTextField7.setVisible(true);
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="SELECT * INTO #TAM FROM CT_DH_VP WHERE SOPD=?\n" +
"SELECT * FROM #TAM TAM JOIN VATPHAM VP ON TAM.MAVPP=VP.MAVPP";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1, (String)tbModel1.getValueAt(jTable3.getSelectedRow(), 0));
                ResultSet rs=ps.executeQuery();
                long tongCong=0;
                while (rs.next())
                {
                    data.add(rs.getString("MAVPP"));
                    data.add(rs.getNString("TENVP"));
                    data.add(rs.getInt("SOLUONG"));
                    data.add(rs.getLong("DONGIA"));
                    data.add(rs.getInt("SOLUONG")*rs.getLong("DONGIA"));
                    tongCong+=rs.getInt("SOLUONG")*rs.getLong("DONGIA");
                    dsData.add(data);
                    data=new Vector();
                }
                jTextField5.setText(String.valueOf(tongCong));
                tbModel.setDataVector(dsData, column);
                conn.close();
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                e.printStackTrace();
            }
        } else
        {
            if (jTable3.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng phiếu đặt hàng trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một phiếu trong bảng để xem!");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
 
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)jTable1.getModel();
        DefaultTableModel tbModel1=(DefaultTableModel)jTable3.getModel();
        if (jTable3.getSelectedRowCount()==1)
        {
            Vector column=new Vector();column.add("Mã");column.add("Tên");column.add("Số lượng");column.add("Đơn giá");column.add("Thành tiền");
            Vector data=new Vector();
            Vector dsData=new Vector();
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="SELECT * FROM (SELECT * FROM PHIEUDATHANG WHERE SOPD=?) PD LEFT JOIN PHIEUNHANHANG PN ON PD.SOPD=PN.SOPD";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1, (String)tbModel1.getValueAt(jTable3.getSelectedRow(), 0));
                ResultSet rs=ps.executeQuery();
                if (rs.next())
                {
                    System.out.print(rs.getString("SOPN"));
                    if (rs.getString("SOPN")==null)
                    {
                        generateSoPN();
                        sql="SELECT * INTO #TAM FROM CT_DH_VP WHERE SOPD=?\n" +
"SELECT * FROM #TAM TAM JOIN VATPHAM VP ON TAM.MAVPP=VP.MAVPP";
                        ps=conn.prepareStatement(sql);
                        ps.setString(1, (String)tbModel1.getValueAt(jTable3.getSelectedRow(), 0));
                        jTextField1.setText((String)tbModel1.getValueAt(jTable3.getSelectedRow(), 0));
                        rs=ps.executeQuery();
                        long tongCong=0;
                        while (rs.next())
                        {
                            data.add(rs.getString("MAVPP"));
                            data.add(rs.getNString("TENVP"));
                            data.add(rs.getInt("SOLUONG"));
                            data.add(rs.getLong("DONGIA"));
                            data.add(rs.getInt("SOLUONG")*rs.getLong("DONGIA"));
                            tongCong+=rs.getInt("SOLUONG")*rs.getLong("DONGIA");
                            dsData.add(data);
                            data=new Vector();
                        }
                        jTextField9.setText(String.valueOf(tongCong));
                        tbModel.setDataVector(dsData, column);
                        jDialog1.setSize(900, 600);
                        jDialog1.setVisible(true);
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "Phiếu này đã có phiếu nhận!");
                    }
                }
                conn.close();
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                e.printStackTrace();
            }
        } else
        {
            if (jTable3.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng phiếu đặt hàng trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một phiếu trong bảng để lập phiếu nhận hàng!");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel tbModel=(DefaultTableModel)jTable1.getModel();
        var data=tbModel.getDataVector();
        if (data.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Phiếu nhận hàng trống!");
        } else
        {
            try {
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="";
                PreparedStatement ps=null;
                String soPD=jTextField1.getText();
                String ghiChu=jTextArea1.getText();
                try
                {
                    conn.setAutoCommit(false);
                    sql="INSERT INTO PHIEUNHANHANG(SOPN,GHICHU,IDNHANVIEN,SOPD) VALUES(?,?,?,?)";
                    ps=conn.prepareStatement(sql);
                    ps.setString(1, jTextField8.getText());
                    ps.setNString(2, ghiChu);
                    ps.setInt(3, ManHinhChinh.ID);
                    ps.setString(4,soPD);
                    ps.executeUpdate();
                    sql="INSERT INTO CT_NH_VP VALUES(?,?,?,?)";
                    ps=conn.prepareStatement(sql);
                    for (var x: data)
                    {
                        ps.setString(1, jTextField8.getText());
                        ps.setString(2,(String)x.get(0));
                        ps.setInt(3, (int)x.get(2));
                        ps.setLong(4, (long)x.get(3));
                        ps.addBatch();
                    }
                    ps.executeBatch();
                    sql="UPDATE VATPHAM SET SLT=SLT+? WHERE MAVPP=?";
                    ps=conn.prepareStatement(sql);
                    for (var x: data)
                    {
                        ps.setString(2,(String)x.get(0));
                        ps.setInt(1, (int)x.get(2));
                        ps.addBatch();
                    }
                    ps.executeBatch();
                    conn.commit();
                    JOptionPane.showMessageDialog(null, "Lập phiếu nhận hàng thành công!");
                    jDialog1.dispose();
                } catch(Exception ex) {
                    conn.rollback();
                    JOptionPane.showMessageDialog(null, "Lập phiếu nhận hàng thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                    ex.printStackTrace();
                }
                conn.close();
            } catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CardLayout c=(CardLayout)jPanel9.getLayout();
        c.show(jPanel9, "lapPD");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void loadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButton1ActionPerformed
        // TODO add your handling code here:
        jComboBox1.setEnabled(true);
        loadButton.setEnabled(true);
        loadButton1.setEnabled(false);
        clearPhieuDatTable();
    }//GEN-LAST:event_loadButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        if (((String)jComboBox2.getSelectedItem()).equals("Tất cả"))
        {
            loadDataAll();
        } else if (((String)jComboBox2.getSelectedItem()).equals("Chưa nhập hàng"))
        {
            loadDataChuaNhan();
        }
        else
        {
            loadDataDaNhan();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        CardLayout c=(CardLayout)jPanel9.getLayout();
        c.show(jPanel9, "xemPD");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        loadDataSoPD();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        loadDataPNSoPN();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbModel=(DefaultTableModel)jTable2.getModel();
        DefaultTableModel tbModel1=(DefaultTableModel)jTable4.getModel();
        if (jTable4.getSelectedRowCount()==1)
        {
            Vector column=new Vector();column.add("Mã");column.add("Tên");column.add("Số lượng");column.add("Đơn giá");column.add("Thành tiền");
            Vector data=new Vector();
            Vector dsData=new Vector();
            jTextField2.setText((String)tbModel1.getValueAt(jTable4.getSelectedRow(), 0));
            jTextField3.setText(String.valueOf(tbModel1.getValueAt(jTable4.getSelectedRow(), 2)));
            jTextField4.setText((String)tbModel1.getValueAt(jTable4.getSelectedRow(), 1));
            jLabel13.setText("CHI TIẾT PHIẾU NHẬN");
            jLabel14.setText("Số PN:");
            jLabel19.setVisible(false);
            jLabel20.setVisible(false);
            jTextField6.setVisible(false);
            jTextField7.setVisible(false);
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="""
                           SELECT * INTO #TAM FROM CT_NH_VP WHERE SOPN=?
                           SELECT * FROM #TAM TAM JOIN VATPHAM VP ON TAM.MAVPP=VP.MAVPP""";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1, (String)tbModel1.getValueAt(jTable4.getSelectedRow(), 0));
                ResultSet rs=ps.executeQuery();
                long tongCong=0;
                while (rs.next())
                {
                    data.add(rs.getString("MAVPP"));
                    data.add(rs.getNString("TENVP"));
                    data.add(rs.getInt("SOLUONG"));
                    data.add(rs.getLong("DONGIA"));
                    data.add(rs.getInt("SOLUONG")*rs.getLong("DONGIA"));
                    tongCong+=rs.getInt("SOLUONG")*rs.getLong("DONGIA");
                    dsData.add(data);
                    data=new Vector();
                }
                jTextField5.setText(String.valueOf(tongCong));
                tbModel.setDataVector(dsData, column);
                conn.close();
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                e.printStackTrace();
            }
        } else
        {
            if (jTable4.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng phiếu nhận hàng trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một phiếu trong bảng để xem!");
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        loadDataPNAll();
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LapPhieuDatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LapPhieuDatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LapPhieuDatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LapPhieuDatHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LapPhieuDatHang().setVisible(true);
        });
    }
    private void clearPhieuDatTable(){
        DefaultTableModel tbModel=(DefaultTableModel)phieuDHTable.getModel();
        Vector column=new Vector();
        Vector data=new Vector();
        column.add("Mã");column.add("Tên");
        column.add("Số lượng");column.add("Đơn giá");
        tbModel.setDataVector(data, column);
        tinhTien();
    }
    private void generateSoPD(){
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT COUNT(*) TONG FROM PHIEUDATHANG";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            if (rs.next())
            {
                this.soPDLabel.setText(Account.generateCode(rs.getInt("TONG")+1, 10));
            }
            sql="SELECT * FROM NHACC";
            ps=conn.prepareStatement(sql);
            rs=ps.executeQuery();
            while(rs.next())
            {
                dsNcc.put(rs.getNString("TEN"),rs.getString("MANCC"));
                jComboBox1.addItem(rs.getNString("TEN"));
            }
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            ex.printStackTrace();
        }
    }
    private void tinhTien(){
        long tong=0;
        DefaultTableModel tbModel=(DefaultTableModel)phieuDHTable.getModel();
        var data=tbModel.getDataVector();
        for (Iterator it = data.iterator(); it.hasNext();) {
                var x = (Vector) it.next();
                tong+=(long)x.get(3)*(int) x.get(2);
        }
        this.thanhTienText.setText(String.valueOf(tong));
    }
    private void loadDataAll(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable3.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM PHIEUDATHANG";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PD");column.add("Ngày lập");column.add("Thời gian giao");column.add("Địa điểm giao");column.add("ID nhân viên");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPD"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getString("THOIGIANGIAO"));
                data.add(rs.getString("DIADIEMGIAO"));
                data.add(rs.getInt("IDNHANVIEN"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataChuaNhan(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable3.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM (SELECT NH.SOPN,DH.SOPD,DH.GHICHU,DH.NGAY,DH.THOIGIANGIAO,DH.DIADIEMGIAO,DH.IDNHANVIEN FROM PHIEUNHANHANG NH RIGHT JOIN PHIEUDATHANG DH ON NH.SOPD=DH.SOPD) TAM WHERE TAM.SOPN IS NULL";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PD");column.add("Ngày lập");column.add("Thời gian giao");column.add("Địa điểm giao");column.add("ID nhân viên");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPD"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getString("THOIGIANGIAO"));
                data.add(rs.getString("DIADIEMGIAO"));
                data.add(rs.getInt("IDNHANVIEN"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataDaNhan(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable3.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM PHIEUDATHANG DH JOIN PHIEUNHANHANG NH ON DH.SOPD=NH.SOPD";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PD");column.add("Ngày lập");column.add("Thời gian giao");column.add("Địa điểm giao");column.add("ID nhân viên");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPD"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getString("THOIGIANGIAO"));
                data.add(rs.getString("DIADIEMGIAO"));
                data.add(rs.getInt("IDNHANVIEN"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataSoPD(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable3.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM PHIEUDATHANG WHERE SOPD LIKE '%'+?+'%'";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setString(1, jTextField10.getText().strip());
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PD");column.add("Ngày lập");column.add("Thời gian giao");column.add("Địa điểm giao");column.add("ID nhân viên");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPD"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getString("THOIGIANGIAO"));
                data.add(rs.getString("DIADIEMGIAO"));
                data.add(rs.getInt("IDNHANVIEN"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataPNAll(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable4.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM PHIEUNHANHANG";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PN");column.add("Ngày lập");column.add("ID nhân viên");column.add("Số PD");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPN"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getString("SOPD"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
        private void loadDataPNSoPN(){
        DefaultTableModel tbModel=(DefaultTableModel)jTable4.getModel();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM PHIEUNHANHANG WHERE SOPN LIKE '%'+?+'%'";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setString(1, jTextField11.getText().strip());
            ResultSet rs=ps.executeQuery();
            Vector column=new Vector();column.add("Số PN");column.add("Ngày lập");column.add("ID nhân viên");column.add("Số PD");
            Vector data=new Vector();
            Vector dsData=new Vector();
            while (rs.next())
            {
                data.add(rs.getString("SOPN"));
                data.add(rs.getString("NGAY"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getString("SOPD"));
                dsData.add(data);
                data=new Vector();
            }
            tbModel.setDataVector(dsData, column);
            conn.close();
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void generateSoPN()
    {
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT COUNT(*) TONG FROM PHIEUNHANHANG";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            if (rs.next())
            {
                this.jTextField8.setText(Account.generateCode(rs.getInt("TONG")+1, 10));
            }
            conn.close();
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            ex.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField diaDiemGiaoText;
    private javax.swing.JTextField donGiaText;
    private javax.swing.JTextField hoTenText;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel lapPD;
    private javax.swing.JButton lapPhieuButton;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton loadButton1;
    private javax.swing.JTable matHangTable;
    private javax.swing.JTable phieuDHTable;
    private javax.swing.JButton refreshButton;
    private javax.swing.JSpinner soLuongSpinner;
    private javax.swing.JTextField soPDLabel;
    private javax.swing.JTextField thanhTienText;
    private javax.swing.JButton them2Button;
    private javax.swing.JButton themMHButton;
    private javax.swing.JTextField thoiGianGiaoText;
    private javax.swing.JPanel xemPD;
    private javax.swing.JButton xoaButton;
    // End of variables declaration//GEN-END:variables
}
