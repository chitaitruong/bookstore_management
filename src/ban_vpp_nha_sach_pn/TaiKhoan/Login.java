/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ban_vpp_nha_sach_pn.TaiKhoan;

import ban_vpp_nha_sach_pn.ConnectionUtils;
import ban_vpp_nha_sach_pn.KichHoatTaiKhoan;
import ban_vpp_nha_sach_pn.ManHinhChinh;
import java.awt.Color;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.HashSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;
/**
 *
 * @author ASUS
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     * @throws java.security.NoSuchAlgorithmException
     */
    public static String getHash(String password) throws NoSuchAlgorithmException
    {
        return BCrypt.hashpw(password, BCrypt.gensalt(12));
    }
    public static boolean verify(String inputPassword, String hashPassWord)
            throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] messageDigest = md.digest(inputPassword.getBytes());
        BigInteger no = new BigInteger(1, messageDigest);
        String hashtext = no.toString(16);
        while (hashtext.length() < 32) {
            hashtext = "0" + hashtext;
        }
        return hashPassWord.equals(hashtext);
    }
    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loginText = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        passwordText = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFocusable(false);

        jLabel1.setBackground(new java.awt.Color(255, 255, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ban_vpp_nha_sach_pn/logo_login.jpg"))); // NOI18N

        loginText.setForeground(java.awt.Color.gray);
        loginText.setText("Username");
        loginText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loginText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                loginTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                loginTextFocusLost(evt);
            }
        });
        loginText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginTextActionPerformed(evt);
            }
        });

        btnLogin.setBackground(java.awt.Color.blue);
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        passwordText.setForeground(java.awt.Color.gray);
        passwordText.setText("Password");
        passwordText.setEchoChar('\u0000');
        passwordText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFocusLost(evt);
            }
        });

        jCheckBox1.setText("Hiện mật khẩu");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Quên mật khẩu?");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1)
                            .addComponent(passwordText)
                            .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                            .addComponent(loginText))
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(153, 153, 153))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginTextActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_loginTextActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT IDNHANVIEN,HASHPASS,USERNAME FROM ACCOUNT WHERE USERNAME=? AND ACTIVE=1";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setString(1, loginText.getText());
            
            ResultSet rs=ps.executeQuery();
            if (rs.next())
            {
                ManHinhChinh.dsQuyen=new HashSet<>();
                String hasspass=rs.getString("HASHPASS");
                System.out.println(hasspass);
                int ID=rs.getInt("IDNHANVIEN");
                if (!BCrypt.checkpw("1",rs.getString("HASHPASS"))){
                    System.out.println("1");
                    if (BCrypt.checkpw(passwordText.getText(),hasspass))
                    {
                        String user=rs.getString("USERNAME");
                        ps=conn.prepareStatement("UPDATE ACCOUNT SET LASTLOGIN=GETDATE() WHERE USERNAME=?");
                        ps.setString(1,user);
                        ps.executeUpdate();
                        sql="SELECT HO+' '+TEN HOTEN FROM NHANVIEN WHERE ID=? AND NGHI=0";
                        ps=conn.prepareStatement(sql);
                        ps.setInt(1,ID);
                        rs=ps.executeQuery();
                        if (rs.next())
                        {
                            String hoTen=rs.getNString("HOTEN");
                            ManHinhChinh.ID=ID;
                            ManHinhChinh.hoTen=hoTen;
                            sql="SELECT TAM.MAPER,P.ACTIVE,TAM.TITLE FROM (SELECT RP.MAPER,TITLE FROM (SELECT R.MAROLE,R.TITLE FROM ROLE R JOIN (SELECT TOP 1 MAROLE FROM ROLE_USER WHERE USERNAME=? ORDER BY NGAY DESC) RU ON R.MAROLE=RU.MAROLE AND R.ACTIVE=1) R JOIN ROLE_PERMISSION RP ON R.MAROLE=RP.MAROLE) TAM JOIN PERMISSION P ON P.MAPER=TAM.MAPER AND P.ACTIVE=1";
                            ps=conn.prepareStatement(sql);
                            ps.setString(1, user);
                            rs=ps.executeQuery();
                            while (rs.next())
                            {
                                ManHinhChinh.dsQuyen.add(rs.getString("MAPER"));
                                ManHinhChinh.role=rs.getString("TITLE");
                            }
                            conn.close();
                            new ManHinhChinh().setVisible(true);
                            this.dispose();
                        } else
                        {
                            JOptionPane.showMessageDialog(null, "Nhân viên không tồn tại trong hệ thống! Hoặc đã nghỉ việc!");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Sai username hoặc mật khẩu!");
                    }
                } else
                {
                    sql="SELECT EMAIL FROM NHANVIEN WHERE ID=? AND NGHI=0";
                    ps=conn.prepareStatement(sql);
                    ps.setInt(1, ID);
                    rs=ps.executeQuery();
                    if (rs.next())
                    {
                        KichHoatTaiKhoan.username=loginText.getText();
                        KichHoatTaiKhoan.email=rs.getString("EMAIL");
                        new KichHoatTaiKhoan(this, true).setVisible(true);
                    } else
                    {
                        JOptionPane.showMessageDialog(null, "Sai username hoặc mật khẩu!");
                    }
                }
            
            }
            else{
                JOptionPane.showMessageDialog(null, "Sai username hoặc mật khẩu!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected())
            passwordText.setEchoChar('\u0000');
        else
            if (!passwordText.getText().equals("Password"))
                passwordText.setEchoChar('*');
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        new QuenMatKhau(this,true).setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void loginTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loginTextFocusGained
        // TODO add your handling code here:
        if (this.loginText.getText().equals("Username"))
        {
            this.loginText.setText("");
            this.loginText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_loginTextFocusGained

    private void loginTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loginTextFocusLost
        // TODO add your handling code here:
        if (this.loginText.getText().isBlank())
        {
            this.loginText.setText("Username");
            this.loginText.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_loginTextFocusLost

    private void passwordTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusGained
        // TODO add your handling code here:
        if (this.passwordText.getText().equals("Password"))
        {
            this.passwordText.setText("");
            this.passwordText.setEchoChar('*');
            this.passwordText.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_passwordTextFocusGained

    private void passwordTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusLost
        // TODO add your handling code here:
        if (this.passwordText.getText().isBlank())
        {
            this.passwordText.setEchoChar('\u0000');
            this.passwordText.setText("Password");
            this.passwordText.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_passwordTextFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField loginText;
    private javax.swing.JPasswordField passwordText;
    // End of variables declaration//GEN-END:variables
}
