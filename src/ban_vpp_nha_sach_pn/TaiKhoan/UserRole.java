/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ban_vpp_nha_sach_pn.TaiKhoan;

import ban_vpp_nha_sach_pn.Account;
import ban_vpp_nha_sach_pn.ManHinhChinh;
import ban_vpp_nha_sach_pn.ConnectionUtils;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;

/**
 *
 * @author ASUS
 */
public class UserRole extends javax.swing.JDialog {

    /**
     * Creates new form UserRole
     */
    ArrayList<JCheckBox> listRole;
    HashMap<String, String> roleMap;
    String role;
    boolean active;
    boolean nghi;
    public UserRole(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadData();
        setIcon();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phanQuyen = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        themNV = new javax.swing.JDialog();
        themNVPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        hoTenText = new javax.swing.JTextField();
        gioiTinhCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SDTText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cccdText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        diaChiText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        themButton = new javax.swing.JButton();
        clearThongTinButton = new javax.swing.JButton();
        userNameText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        idNVText = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        suaNV = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        xemNV = new javax.swing.JDialog();
        themNVPanel1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        hoTenText1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        emailText1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        SDTText1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cccdText1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        diaChiText1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        userNameText1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        idNVText1 = new javax.swing.JTextField();
        ngayLenQLText1 = new javax.swing.JTextField();
        ngaySinhText1 = new javax.swing.JTextField();
        gioiTinhText1 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();

        phanQuyen.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        phanQuyen.setTitle("PHÂN QUYỀN");
        phanQuyen.setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        phanQuyen.setModal(true);
        phanQuyen.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                phanQuyenWindowClosing(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel15.setText("ROLE:");

        jButton8.setText("Lưu");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel27.setText("Username:");

        jTextField1.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton8))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 315, Short.MAX_VALUE)
                            .addComponent(jTextField1))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap(202, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jLabel2.setBackground(java.awt.Color.blue);
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PHÂN QUYỀN");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout phanQuyenLayout = new javax.swing.GroupLayout(phanQuyen.getContentPane());
        phanQuyen.getContentPane().setLayout(phanQuyenLayout);
        phanQuyenLayout.setHorizontalGroup(
            phanQuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(phanQuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        phanQuyenLayout.setVerticalGroup(
            phanQuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(phanQuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        themNV.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        themNV.setTitle("THÊM NHÂN VIÊN");
        themNV.setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        themNV.setModal(true);

        themNVPanel.setPreferredSize(new java.awt.Dimension(900, 520));
        themNVPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themNVPanelMouseClicked(evt);
            }
        });
        themNVPanel.setLayout(new java.awt.BorderLayout());

        gioiTinhCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        jLabel3.setText("Giới tính:");

        jLabel4.setText("Họ và tên:");

        jLabel5.setText("Email:");

        jLabel6.setText("Số điện thoại:");

        SDTText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDTTextActionPerformed(evt);
            }
        });

        jLabel7.setText("CCCD/CMND:");

        jLabel8.setText("Ngày sinh:");

        jLabel9.setText("Địa chỉ:");

        jLabel10.setText("Ngày lên quản lí:");

        themButton.setText("Thêm");
        themButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themButtonActionPerformed(evt);
            }
        });

        clearThongTinButton.setText("Clear");
        clearThongTinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearThongTinButtonActionPerformed(evt);
            }
        });

        userNameText.setEditable(false);
        userNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameText.setText("0000000001");

        jLabel11.setText("Username:");

        jLabel12.setText("ID:");

        idNVText.setEditable(false);
        idNVText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idNVText.setText("0000000001");

        jLabel28.setText("ROLE:");

        jDateChooser1.setDateFormatString("dd-MM-yyyy");

        jDateChooser2.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idNVText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(hoTenText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel28))
                                .addComponent(gioiTinhCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(clearThongTinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(themButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(diaChiText))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(SDTText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cccdText, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE))))))))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(idNVText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(userNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(hoTenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28))
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gioiTinhCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(SDTText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(cccdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(diaChiText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearThongTinButton)
                    .addComponent(themButton))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        themNVPanel.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(900, 70));

        jLabel13.setBackground(java.awt.Color.blue);
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("THÊM NHÂN VIÊN");
        jLabel13.setOpaque(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        themNVPanel.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout themNVLayout = new javax.swing.GroupLayout(themNV.getContentPane());
        themNV.getContentPane().setLayout(themNVLayout);
        themNVLayout.setHorizontalGroup(
            themNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(themNVPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        themNVLayout.setVerticalGroup(
            themNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(themNVPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        suaNV.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        suaNV.setTitle("SỬA TRẠNG THÁI ACCOUNT");
        suaNV.setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        suaNV.setModal(true);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Hoạt động");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Không hoạt động");

        jButton2.setText("Lưu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel29.setText("Username:");

        jTextField2.setEditable(false);

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Còn làm");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("Đã nghỉ việc");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel30.setText("ID:");

        jTextField3.setEditable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 156, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        suaNV.getContentPane().add(jPanel10, java.awt.BorderLayout.CENTER);

        jLabel14.setBackground(java.awt.Color.blue);
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("SỬA TRẠNG THÁI HOẠT ĐỘNG");
        jLabel14.setToolTipText("");
        jLabel14.setOpaque(true);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        suaNV.getContentPane().add(jPanel11, java.awt.BorderLayout.PAGE_START);

        xemNV.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        xemNV.setTitle("THÔNG TIN NHÂN VIÊN");
        xemNV.setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        xemNV.setModal(true);
        xemNV.getContentPane().setLayout(new java.awt.CardLayout());

        themNVPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themNVPanel1MouseClicked(evt);
            }
        });
        themNVPanel1.setLayout(new java.awt.BorderLayout());

        hoTenText1.setEditable(false);

        jLabel16.setText("Giới tính:");

        jLabel17.setText("Họ và tên:");

        jLabel18.setText("Email:");

        emailText1.setEditable(false);
        emailText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailText1ActionPerformed(evt);
            }
        });

        jLabel19.setText("Số điện thoại:");

        SDTText1.setEditable(false);
        SDTText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDTText1ActionPerformed(evt);
            }
        });

        jLabel20.setText("CCCD/CMND:");

        cccdText1.setEditable(false);

        jLabel21.setText("Ngày sinh:");

        jLabel22.setText("Địa chỉ:");

        diaChiText1.setEditable(false);

        jLabel23.setText("Ngày lên quản lí:");

        userNameText1.setEditable(false);
        userNameText1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameText1.setText("0000000001");

        jLabel24.setText("Username:");

        jLabel25.setText("ID:");

        idNVText1.setEditable(false);
        idNVText1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idNVText1.setText("0000000001");

        ngayLenQLText1.setEditable(false);

        ngaySinhText1.setEditable(false);

        gioiTinhText1.setEditable(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hoTenText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(gioiTinhText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ngayLenQLText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(diaChiText1))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(emailText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ngaySinhText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(SDTText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cccdText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idNVText1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userNameText1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(idNVText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(userNameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(hoTenText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(gioiTinhText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ngayLenQLText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(emailText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(SDTText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(cccdText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ngaySinhText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(diaChiText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        themNVPanel1.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel15.setPreferredSize(new java.awt.Dimension(900, 70));

        jLabel26.setBackground(java.awt.Color.blue);
        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("THÔNG TIN NHÂN VIÊN");
        jLabel26.setOpaque(true);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        themNVPanel1.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        xemNV.getContentPane().add(themNVPanel1, "card2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÍ TÀI KHOẢN");
        setIconImage(new ImageIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\logo_mini.jpg").getImage());
        setModal(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));
        jPanel1.setLayout(new java.awt.BorderLayout());

        accountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(accountTable);

        jButton1.setToolTipText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setToolTipText("Xóa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setToolTipText("Phân quyền");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setToolTipText("Sửa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setToolTipText("Thông tin nhân viên");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Còn làm", "Nghỉ việc" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Hoạt động", "Ngưng hoạt động" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel31.setText("Còn làm:");

        jLabel32.setText("Hoạt động:");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1176, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(mainPanel, java.awt.BorderLayout.CENTER);

        jLabel1.setBackground(java.awt.Color.blue);
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÍ TÀI KHOẢN");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        roleMap=new HashMap<>();
        jComboBox1.removeAllItems();
        if (accountTable.getSelectedRowCount()==1)
        {
            DefaultTableModel tbModel=(DefaultTableModel)accountTable.getModel();
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="SELECT MAROLE,TITLE FROM ROLE";
                PreparedStatement ps=conn.prepareStatement(sql);
                ResultSet rs=ps.executeQuery();
                while (rs.next())
                {
                    jComboBox1.addItem(rs.getNString("TITLE"));
                    roleMap.put(rs.getNString("TITLE"), rs.getString("MAROLE"));
                }
                sql="SELECT R.MAROLE,TITLE FROM ROLE R JOIN (SELECT TOP 1 MAROLE FROM ROLE_USER WHERE USERNAME=? ORDER BY NGAY DESC) RU ON R.MAROLE=RU.MAROLE";
                ps=conn.prepareStatement(sql);
                ps.setString(1,(String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                rs=ps.executeQuery();
                if (rs.next())
                {
                    jComboBox1.setSelectedItem(rs.getNString("TITLE"));
                    System.out.println(rs.getNString("TITLE"));
                    role=rs.getNString("TITLE");
                } else
                {
                    jComboBox1.addItem("KHONG THUOC ROLE NAO");
                    jComboBox1.setSelectedItem("KHONG THUOC ROLE NAO");
                    role="KHONG THUOC ROLE NAO";
                }
                conn.close();
                jTextField1.setText((String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                phanQuyen.setSize(400,300);
                phanQuyen.setLocationRelativeTo(null);
                phanQuyen.setVisible(true);
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                e.printStackTrace();
            }
        } else
        {
            if (accountTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Danh sách tài khoản trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một tài khoản trong danh sách để phân quyền!");
            }
        }
        /*roleMap=new HashMap<>();
        listRole=new ArrayList<>();
        jPanel5.removeAll();
        if (accountTable.getSelectedRowCount()==1)
        {
            DefaultTableModel tbModel=(DefaultTableModel)accountTable.getModel();
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="SELECT * FROM ROLE R LEFT JOIN ROLE_USER RU ON R.MAROLE=RU.MAROLE AND RU.USERNAME=?";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1,(String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                ResultSet rs=ps.executeQuery();
                int y=10;
                while (rs.next()){
                    roleMap.put(rs.getNString("TITLE"), rs.getString("MAROLE"));
                    JCheckBox e=new JCheckBox(rs.getNString("TITLE"));
                    e.setBounds(10, y, 400, 20);
                    y+=20;
                    e.setVisible(true);
                    System.out.print(rs.getString("USERNAME"));
                    if (rs.getString("USERNAME")==null)
                        e.setSelected(false);
                    else e.setSelected(true);
                    jPanel5.add(e);
                    listRole.add(e);
                }
                conn.close();
                JButton bt=new JButton("Lưu");
                jPanel5.add(bt);
                bt.setBounds(10, y, 100, 30);
                bt.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try{
                            Connection conn=ConnectionUtils.getSQLServerConnection();
                            try{
                                conn.setAutoCommit(false);
                                String sql="DELETE ROLE_USER WHERE USERNAME=?";
                                PreparedStatement ps=conn.prepareStatement(sql);
                                ps.setString(1, jLabel2.getText());
                                ps.executeUpdate();
                                sql="INSERT INTO ROLE_USER VALUES(?,?,GETDATE(),?)";
                                ps=conn.prepareStatement(sql);
                                for (var x : listRole){
                                   if (x.isSelected())
                                   {
                                       ps.setString(1, roleMap.get(x.getText()));
                                       ps.setString(2, jLabel2.getText());
                                       ps.setInt(3, ManHinhChinh.ID);//String.valueOf(ManHinhChinh.ID));
                                       ps.addBatch();
                                   }
                                }
                                ps.executeBatch();
                                conn.commit();
                                phanQuyen.dispose();
                                JOptionPane.showMessageDialog(null, "Cập nhật role thành công!");
                            } catch (Exception ex){
                                JOptionPane.showMessageDialog(null, "Cập nhật role thất bại!");
                                ex.printStackTrace();
                            }
                       } catch (Exception ex){
                           try{
                               conn.rollback();
                               conn.close();
                           } catch (SQLException et){
                               et.printStackTrace();
                           }
                           
                           JOptionPane.showMessageDialog(null, "Cập nhật role thất bại!");
                           ex.printStackTrace();
                       }
                    }
                });
                jLabel2.setText((String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                phanQuyen.setSize(400,700);
                phanQuyen.setLocationRelativeTo(null);
                phanQuyen.setVisible(true);
            } catch (Exception e){
                JOptionPane.showMessageDialog(this, "Lỗi!");
                e.printStackTrace();
            }
        } else
        {
            if (accountTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Danh sách tài khoản trống");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một tài khoản trong danh sách để phân quyền");
            }
        }*/
    }//GEN-LAST:event_jButton4ActionPerformed

    private void phanQuyenWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_phanQuyenWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_phanQuyenWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        roleMap=new HashMap<>();
        jComboBox2.removeAllItems();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT MAX(ID) SONV FROM NHANVIEN";
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            if (rs.next())
            {
                int soNV=rs.getInt("SONV");
                idNVText.setText(String.valueOf(soNV+1));
                userNameText.setText(Account.generateCode(soNV+1, 10));
                sql="SELECT MAROLE,TITLE FROM ROLE";
                rs=st.executeQuery(sql);
                while (rs.next())
                {
                    jComboBox2.addItem(rs.getNString("TITLE"));
                    roleMap.put(rs.getNString("TITLE"), rs.getString("MAROLE"));
                }
                themNV.setSize(620,520);
                themNV.setLocationRelativeTo(null);
                themNV.setVisible(true);
            }
            conn.close();
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SDTTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDTTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDTTextActionPerformed

    private void themButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themButtonActionPerformed
        // TODO add your handling code here:
        String regexPhone="^(0[3|5|7|8|9])([0-9]{8})$";
        //String emailRegex="^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,6}$";
        try{
            int gioiTinh=gioiTinhCombo.getSelectedIndex();
            String sdt=SDTText.getText().strip();
            String email=emailText.getText().strip();
            String diaChi=diaChiText.getText().strip();
            String cccd=cccdText.getText().strip();
            int idNV=Integer.valueOf(idNVText.getText());
            String username=userNameText.getText();
            String[] ten=hoTenText.getText().strip().split("\\s+");
            String ngaySinh="";
            String ngayLenQL="";
            boolean checkTuoi=true;
            if (jDateChooser1.getDate()==null)
            {
            } else
            {
                ngaySinh=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
            }
            if (jDateChooser2.getDate()==null)
            {
            } else
                ngaySinh=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
            int i=0;
            String ho="";
            while (i<ten.length-1)
            {
                if (i==ten.length-2)
                    ho+=ten[i];
                else 
                    ho+=ten[i]+" ";
                i++;
            }
            if(sdt.isBlank()||email.isBlank()||diaChi.isBlank()|| cccd.isBlank()||hoTenText.getText().isBlank()||ngaySinh.isBlank()){
                JOptionPane.showMessageDialog(null, "Nhập thiếu thông tin! Xin kiểm tra lại!");
            } else
            {
                if (checkTuoi && sdt.matches(regexPhone))
                {
                    Connection conn=ConnectionUtils.getSQLServerConnection();
                    String sql="";
                    if (ngayLenQL.isBlank()){
                        sql="INSERT INTO NHANVIEN(HO,TEN,GIOITINH,SDT,EMAIL,NGAYSINH,CCCD,DIACHI,ID) "
                        + "VALUES(?,?,?,?,?,?,?,?,?)";
                    } else {
                        sql="INSERT INTO NHANVIEN(HO,TEN,GIOITINH,SDT,EMAIL,NGAYSINH,CCCD,DIACHI,ID,NGAYLENQUANLI) "
                        + "VALUES(?,?,?,?,?,?,?,?,?,?)";
                    }
                    try{
                        conn.setAutoCommit(false);
                        PreparedStatement ps=conn.prepareStatement(sql);
                        ps.setNString(2, ten[ten.length-1]);
                        ps.setNString(1, ho);
                        ps.setInt(3, gioiTinh);
                        ps.setString(4, sdt);
                        ps.setString(5, email);
                        ps.setString(6, ngaySinh);
                        ps.setString(7, cccd);
                        ps.setNString(8, diaChi);
                        ps.setInt(9, idNV);
                        if (!ngayLenQL.isBlank())
                            ps.setString(10, ngayLenQL);
                        ps.executeUpdate();
                        sql="INSERT INTO ACCOUNT(USERNAME,HASHPASS,IDNHANVIEN) VALUES(?,?,?)";
                        ps=conn.prepareStatement(sql);
                        ps.setString(1, username);
                        ps.setString(2,Login.getHash("1"));
                        ps.setInt(3,idNV);
                        ps.executeUpdate();
                        sql="INSERT INTO ROLE_USER VALUES(?,?,GETDATE(),?)";
                        ps=conn.prepareStatement(sql);
                        ps.setString(1, roleMap.get((String)jComboBox2.getSelectedItem()));
                        ps.setString(2,userNameText.getText());
                        ps.setInt(3, ManHinhChinh.ID);
                        ps.executeUpdate();
                        conn.commit();
                        conn.close();
                        themNV.dispose();
                        loadData();
                        clearThongTinButtonActionPerformed(evt);
                        JOptionPane.showMessageDialog(null, "Thêm nhân viên thành công.");
                    } catch (Exception e){
                        conn.rollback();
                        JOptionPane.showMessageDialog(null, "Thêm nhân viên thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                        e.printStackTrace();
                    }
                    conn.close();
                } else
                {
                    JOptionPane.showMessageDialog(null, "Thông tin không hợp lệ! Xin kiểm tra lại!");
                }
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Thêm nhân viên thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_themButtonActionPerformed

    private void clearThongTinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearThongTinButtonActionPerformed
        // TODO add your handling code here:
        this.SDTText.setText("");
        this.hoTenText.setText("");
        this.emailText.setText("");
        this.diaChiText.setText("");
        this.cccdText.setText("");
        this.jDateChooser1.setDate(null);
        this.jDateChooser2.setDate(null);
    }//GEN-LAST:event_clearThongTinButtonActionPerformed

    private void themNVPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themNVPanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_themNVPanelMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (accountTable.getSelectedRowCount()==1)
        {
            DefaultTableModel tbModel=(DefaultTableModel)accountTable.getModel();
            int i=JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa tài khoản và nhân viên này?","Chọn",JOptionPane.YES_NO_OPTION);
            if (i==0)
            {
                try{
                    Connection conn=ConnectionUtils.getSQLServerConnection();
                    String sql="DELETE NHANVIEN WHERE ID=?";
                    PreparedStatement ps=conn.prepareStatement(sql);
                    ps.setInt(1, (Integer)tbModel.getValueAt(accountTable.getSelectedRow(), 5));
                    ps.executeUpdate();
                    conn.close();
                    loadData();
                    JOptionPane.showMessageDialog(null, "Xóa thành công.");
                } catch (Exception e){
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Xóa thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                }
                
            }
        } else
        {
            if (accountTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng tài khoản trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một tài khoản trong bảng để xóa!");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (accountTable.getSelectedRowCount()==1)
        {
            DefaultTableModel tbModel=(DefaultTableModel)accountTable.getModel();
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="SELECT ACTIVE,IDNHANVIEN,NGHI FROM NHANVIEN NV JOIN (SELECT ACTIVE,IDNHANVIEN FROM ACCOUNT WHERE USERNAME=?) AC ON NV.ID=AC.IDNHANVIEN";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1, (String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                ResultSet rs=ps.executeQuery();
                if (rs.next())
                {
                    if (rs.getBoolean("ACTIVE"))
                    {
                        System.out.print(1);
                        jRadioButton1.setSelected(true);
                        active=true;
                    } 
                    else 
                    {
                        jRadioButton2.setSelected(true);
                        active=false;
                    }
                    if (rs.getBoolean("NGHI"))
                    {
                        jRadioButton4.setSelected(true);
                        nghi=true;
                    } 
                    else 
                    {
                        jRadioButton3.setSelected(true);
                        nghi=false;
                    }    
                }
                conn.close();
                jTextField2.setText((String)tbModel.getValueAt(accountTable.getSelectedRow(), 0));
                jTextField3.setText(String.valueOf(tbModel.getValueAt(accountTable.getSelectedRow(), 5)));
                suaNV.setSize(400, 300);
                suaNV.setLocationRelativeTo(null);
                suaNV.setVisible(true);
            } catch (Exception ex)
            {
                ex.printStackTrace();
            }  
        } else
        {
            if (accountTable.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(null, "Bảng tài khoản trống!");
            } else
            {
                JOptionPane.showMessageDialog(null, "Xin hãy chọn một tài khoản trong bảng để sửa!");
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if ((active==false && nghi==true && jRadioButton2.isSelected() && jRadioButton4.isSelected()) || (active==false && nghi==false && jRadioButton2.isSelected() && jRadioButton3.isSelected()) || (active==true && nghi==false && jRadioButton1.isSelected() && jRadioButton3.isSelected()) || (active==true && nghi==true && jRadioButton1.isSelected() && jRadioButton4.isSelected()))
        {
            suaNV.dispose();
        } else
        {
            try{
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="UPDATE ACCOUNT SET ACTIVE=?,UPDATEDAT=GETDATE() WHERE USERNAME=?";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setBoolean(1, jRadioButton1.isSelected());
                ps.setString(2,jTextField2.getText());
                ps.executeUpdate();
                sql="UPDATE NHANVIEN SET NGHI=? WHERE ID=?";
                ps=conn.prepareStatement(sql);
                ps.setBoolean(1, jRadioButton4.isSelected());
                ps.setInt(2,Integer.valueOf(jTextField3.getText()));
                ps.executeUpdate();
                conn.close();
                loadData();
                suaNV.dispose();
                JOptionPane.showMessageDialog(null, "Cập nhật thành công.");
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (accountTable.getSelectedRowCount()==1)
        {
            infoUser((int)accountTable.getValueAt(accountTable.getSelectedRow(), 5), (String)accountTable.getValueAt(accountTable.getSelectedRow(), 0));
            xemNV.setSize(621, 430);
            xemNV.setVisible(true);
        } else
        {
            if (accountTable.getRowCount()==0)
            { 
                JOptionPane.showMessageDialog(this, "Bảng tài khoản trống!");
            } else
            {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn một tài khoản trong bảng để xem!");
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void SDTText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDTText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDTText1ActionPerformed

    private void themNVPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themNVPanel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_themNVPanel1MouseClicked

    private void emailText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailText1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try{
            if (role.equals(jComboBox1.getSelectedItem()))
            {
                phanQuyen.dispose();
            } else
            {
                Connection conn=ConnectionUtils.getSQLServerConnection();
                String sql="INSERT INTO ROLE_USER VALUES(?,?,GETDATE(),?)";
                PreparedStatement ps=conn.prepareStatement(sql);
                ps.setString(1, roleMap.get((String)jComboBox1.getSelectedItem()));
                ps.setString(2,jTextField1.getText());
                ps.setInt(3, ManHinhChinh.ID);
                ps.executeUpdate();
                conn.close();
                phanQuyen.dispose();
                JOptionPane.showMessageDialog(null, "Cập nhật ROLE thành công.");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Cập nhật ROLE thất bại! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadDataHD(false, true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadDataHD(true, true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadDataHD(false, false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadDataHD(true, false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Tất cả"))
        {
            loadData1(false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Tất cả"))
        {
            loadData1(true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Tất cả") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadData2(true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Tất cả") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadData2(false);
        } else 
            loadData();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton4.isSelected())
        {
            jRadioButton2.setSelected(true);
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
        } else
        {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton4.isSelected())
        {
            jRadioButton2.setSelected(true);
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
        } else
        {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadDataHD(false, true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadDataHD(true, true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadDataHD(false, false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadDataHD(true, false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Còn làm") && ((String)jComboBox4.getSelectedItem()).equals("Tất cả"))
        {
            loadData1(false);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Nghỉ việc") && ((String)jComboBox4.getSelectedItem()).equals("Tất cả"))
        {
            loadData1(true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Tất cả") && ((String)jComboBox4.getSelectedItem()).equals("Hoạt động"))
        {
            loadData2(true);
        } else if (((String)jComboBox3.getSelectedItem()).equals("Tất cả") && ((String)jComboBox4.getSelectedItem()).equals("Ngưng hoạt động"))
        {
            loadData2(false);
        } else 
            loadData();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserRole dialog = new UserRole(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private void infoUser(int id,String username){
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT * FROM NHANVIEN WHERE ID=?";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs=ps.executeQuery();
            if (rs.next())
            {
                idNVText1.setText(String.valueOf(id));
                userNameText1.setText(username);
                hoTenText1.setText(rs.getNString("HO")+" "+rs.getNString("TEN"));
                gioiTinhText1.setText(rs.getInt("GIOITINH")==0?"Nam":rs.getInt("GIOITINH")==1?"Nữ":"Khác");
                SDTText1.setText(rs.getString("SDT"));
                emailText1.setText(rs.getString("EMAIL"));
                ngayLenQLText1.setText(rs.getString("NGAYLENQUANLI"));
                ngaySinhText1.setText(rs.getString("NGAYSINH"));
                cccdText1.setText(rs.getString("CCCD"));
                diaChiText1.setText(rs.getNString("DIACHI"));
            } else
            {
                JOptionPane.showMessageDialog(null, "Nhân viên không tồn tại!");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadData(){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON AC.IDNHANVIEN=NV.ID";
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataConLam(){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON NGHI=0 AND AC.IDNHANVIEN=NV.ID";
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataNghiViec(){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON NGHI=1 AND AC.IDNHANVIEN=NV.ID";
            Statement st=conn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDataHD(boolean conlam,boolean trangthai){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON ACTIVE=? AND NGHI=? AND AC.IDNHANVIEN=NV.ID";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setBoolean(1, trangthai);
            ps.setBoolean(2, conlam);
            ResultSet rs=ps.executeQuery();
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadData1(boolean conlam){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON NGHI=? AND AC.IDNHANVIEN=NV.ID";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setBoolean(1, conlam);
            ResultSet rs=ps.executeQuery();
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadData2(boolean trangthai){
        Vector column=new Vector();column.add("Username");column.add("Hoạt động");column.add("Ngày tạo");column.add("Ngày cập nhật");column.add("Lần đăng nhập cuối");column.add("ID Nhân viên");
        column.add("Còn đi làm");
        Vector data=new Vector();
        Vector listData=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT USERNAME,IDNHANVIEN,ACTIVE,REGISTEREDAT,UPDATEDAT,LASTLOGIN,NGHI FROM ACCOUNT AC JOIN NHANVIEN NV ON ACTIVE=? AND AC.IDNHANVIEN=NV.ID";
            PreparedStatement ps=conn.prepareStatement(sql);
            ps.setBoolean(1, trangthai);
            ResultSet rs=ps.executeQuery();
            while (rs.next()){
                data.add(rs.getString("USERNAME"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("REGISTEREDAT"));
                data.add(rs.getString("UPDATEDAT"));
                data.add(rs.getString("LASTLOGIN"));
                data.add(rs.getInt("IDNHANVIEN"));
                data.add(rs.getBoolean("NGHI")?"Nghỉ việc":"Còn làm");
                listData.add(data);
                data=new Vector();
            }
            conn.close();
            DefaultTableModel modelRolePer=(DefaultTableModel)accountTable.getModel();
            modelRolePer.setDataVector(listData, column);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void setIcon(){
        jButton1.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\addUser.png", jButton1.getWidth()-10, jButton1.getHeight()));
        jButton3.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\deleteUser.png", jButton1.getWidth()-10, jButton1.getHeight()));
        jButton4.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\phanQuyenUser.png", jButton1.getWidth()-10, jButton1.getHeight()));
        jButton5.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\editUser.png", jButton1.getWidth()-10, jButton1.getHeight()));
        jButton6.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\back.png", jButton1.getWidth()-10, jButton1.getHeight()));
        jButton7.setIcon(ManHinhChinh.scaledIcon("D:\\Java\\Ban_VPP_Nha_Sach_PN\\src\\ban_vpp_nha_sach_pn\\anh\\infoUser.png", jButton1.getWidth()-10, jButton1.getHeight()));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SDTText;
    private javax.swing.JTextField SDTText1;
    private javax.swing.JTable accountTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cccdText;
    private javax.swing.JTextField cccdText1;
    private javax.swing.JButton clearThongTinButton;
    private javax.swing.JTextField diaChiText;
    private javax.swing.JTextField diaChiText1;
    private javax.swing.JTextField emailText;
    private javax.swing.JTextField emailText1;
    private javax.swing.JComboBox<String> gioiTinhCombo;
    private javax.swing.JTextField gioiTinhText1;
    private javax.swing.JTextField hoTenText;
    private javax.swing.JTextField hoTenText1;
    private javax.swing.JTextField idNVText;
    private javax.swing.JTextField idNVText1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField ngayLenQLText1;
    private javax.swing.JTextField ngaySinhText1;
    private javax.swing.JDialog phanQuyen;
    private javax.swing.JDialog suaNV;
    private javax.swing.JButton themButton;
    private javax.swing.JDialog themNV;
    private javax.swing.JPanel themNVPanel;
    private javax.swing.JPanel themNVPanel1;
    private javax.swing.JTextField userNameText;
    private javax.swing.JTextField userNameText1;
    private javax.swing.JDialog xemNV;
    // End of variables declaration//GEN-END:variables
}
