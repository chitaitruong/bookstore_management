/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ban_vpp_nha_sach_pn;

import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DoanhThu extends javax.swing.JDialog {

    /**
     * Creates new form DoanhThu
     */
    HashMap<String, String> dsVP;
    public DoanhThu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadVatPham();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jLabel2.setText("Năm:");

        jLabel3.setText("Vật phẩm:");
        jLabel3.setEnabled(false);

        jComboBox1.setEnabled(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Tháng 1", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DOANH THU");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(2022, 0, null, 1));

        jButton3.setText("Lọc");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Xem biểu đồ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("In ảnh biểu đồ");

        jButton5.setText("In bảng");

        jCheckBox1.setText("Chọn");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1176, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(44, 44, 44)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(178, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jLabel1.setBackground(java.awt.Color.blue);
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THỐNG KÊ DOANH THU");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected())
        {
            jLabel3.setEnabled(true);
            jComboBox1.setEnabled(true);
        } else
        {
            jLabel3.setEnabled(false);
            jComboBox1.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()==false)
        {
            loadDoanhThu1((int)jSpinner1.getValue());
            jLabel5.setText("DOANH THU NĂM "+String.valueOf(jSpinner1.getValue()));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        ArrayList<Vector> ds=new ArrayList<>(model.getDataVector());
        Chart.ds=ds;
        Chart bd=new Chart();
        bd.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DoanhThu dialog = new DoanhThu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
        private void loadDoanhThu3(){
        Vector dsPer=new Vector();
        Vector perColumn=new Vector();perColumn.add("Mã quyền");perColumn.add("Tên");perColumn.add("Hoạt động");perColumn.add("Mô tả");
        Vector data=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT MAPER,TITLE,ACTIVE,DESCRIPTION FROM PERMISSION";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while (rs.next())
            {
                data.add(rs.getString("MAPER"));
                data.add(rs.getNString("TITLE"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("DESCRIPTION"));
                dsPer.add(data);
                data=new Vector();
            }
            DefaultTableModel modelPer=(DefaultTableModel)jTable1.getModel();
            modelPer.setDataVector(dsPer, perColumn);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDoanhThu2(){
        Vector dsPer=new Vector();
        Vector perColumn=new Vector();perColumn.add("Mã quyền");perColumn.add("Tên");perColumn.add("Hoạt động");perColumn.add("Mô tả");
        Vector data=new Vector();
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT MAPER,TITLE,ACTIVE,DESCRIPTION FROM PERMISSION";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while (rs.next())
            {
                data.add(rs.getString("MAPER"));
                data.add(rs.getNString("TITLE"));
                data.add(rs.getBoolean("ACTIVE")?"Có":"Không");
                data.add(rs.getString("DESCRIPTION"));
                dsPer.add(data);
                data=new Vector();
            }
            DefaultTableModel modelPer=(DefaultTableModel)jTable1.getModel();
            modelPer.setDataVector(dsPer, perColumn);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadDoanhThu1(int nam){
        Vector ds=new Vector();
        Vector column=new Vector();
        Vector doanhThu=new Vector();
        doanhThu.add("Doanh thu");
        Vector loiNhuan=new Vector();
        loiNhuan.add("Lợi nhuận");
        Vector giamGia=new Vector();
        giamGia.add("Giảm giá");
        Vector tienMuaHang=new Vector();
        tienMuaHang.add("Tiền mua hàng");
        Vector tongDT=new Vector();
        tongDT.add("Tổng doanh thu:");
        Vector tongLN=new Vector();
        tongLN.add("Tổng lợi nhuận:");
        Vector tongGG=new Vector();//giamgia
        tongGG.add("Tổng tiền giảm giá:");
        Vector tongTMH=new Vector();//tienmuahang
        tongTMH.add("Tổng tiền mua hàng:");
        column.add("");column.add("Tháng 1");column.add("Tháng 2");column.add("Tháng 3");column.add("Tháng 4");column.add("Tháng 5");column.add("Tháng 6");column.add("Tháng 7");column.add("Tháng 8");column.add("Tháng 9");column.add("Tháng 10");column.add("Tháng 11");column.add("Tháng 12");
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="{call DOANHTHUTHEONAM(?,?)}";
            CallableStatement cstm = conn.prepareCall(sql);
            cstm.setInt(1, (int)jSpinner1.getValue());
            cstm.registerOutParameter(2, java.sql.Types.BIGINT);
            ResultSet rs=cstm.executeQuery();
            while (rs.next())
            {
                doanhThu.add(rs.getLong("DOANHTHU"));
                loiNhuan.add(rs.getLong("DOANHTHU"));
            }
            long tongDoanhThu=cstm.getLong(2);
            ds.add(doanhThu);
            sql="{call TIENMUAHANGTHEONAM(?,?)}";
            cstm = conn.prepareCall(sql);
            cstm.setInt(1, (int)jSpinner1.getValue());
            cstm.registerOutParameter(2, java.sql.Types.BIGINT);
            rs=cstm.executeQuery();
            int i=1;
            while (rs.next())
            {
                tienMuaHang.add(rs.getLong("TIENMUAHANG"));
                loiNhuan.set(i, (long)loiNhuan.get(i)-rs.getLong("TIENMUAHANG"));
                i++;
            }
            ds.add(tienMuaHang);
            long tongTienMuaHang=cstm.getLong(2);
            sql="{call GIAMGIATHEONAM(?,?)}";
            cstm = conn.prepareCall(sql);
            cstm.setInt(1, (int)jSpinner1.getValue());
            cstm.registerOutParameter(2, java.sql.Types.BIGINT);
            rs=cstm.executeQuery();
            i=1;
            while (rs.next())
            {
                giamGia.add(rs.getLong("GIAMGIA"));
                loiNhuan.set(i, (long)loiNhuan.get(i)-rs.getLong("GIAMGIA"));
                i++;
            }
            ds.add(giamGia);
            long tongTienGiamGia=cstm.getLong(2);
            long tongLoiNhuan=0;
            for (i=1;i<13;i++)
            {
                long tam=(long)loiNhuan.get(i);
                tongLoiNhuan+=tam;
                loiNhuan.set(i, tam);
            }
            ds.add(loiNhuan);
            tongDT.add(tongDoanhThu);
            tongTMH.add(tongTienMuaHang);
            tongGG.add(tongTienGiamGia);
            tongLN.add(tongLoiNhuan);
            if (tongLoiNhuan<0)
            {
                tongLN.add("LỖ");
            } else if (tongLoiNhuan==0)
            {
                tongLN.add("HÒA VỐN");
            } else
            {
                tongLN.add("LỜI");
            }
            ds.add(tongDT);
            ds.add(tongTMH);
            ds.add(tongGG);
            ds.add(tongLN);
            DefaultTableModel modelPer=(DefaultTableModel)jTable1.getModel();
            modelPer.setDataVector(ds, column);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(120);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    private void loadVatPham(){
        dsVP=new HashMap<>();
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Tất cả");
        try{
            Connection conn=ConnectionUtils.getSQLServerConnection();
            String sql="SELECT MAVPP,TENVP FROM VATPHAM";
            PreparedStatement ps=conn.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            while (rs.next())
            {
                dsVP.put(rs.getNString("TENVP"), rs.getString("MAVPP"));
                jComboBox1.addItem(rs.getNString("TENVP"));
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Truy vấn và hiển thị dữ liệu không thành công! Lỗi(truy vấn hoặc kết nối cơ sở dữ liệu)!");
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
